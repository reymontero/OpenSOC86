// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.


// Generated by Quartus II 64-Bit Version 13.0 (Build Build 232 06/12/2013)
// Created on Wed Jul 02 23:04:40 2014

OSOC86_cpu OSOC86_cpu_inst
(
	.iClk(iClk_sig) ,	// input  iClk_sig
	.iRamAck(iRamAck_sig) ,	// input  iRamAck_sig
	.iRst(iRst_sig) ,	// input  iRst_sig
	.iInt(iInt_sig) ,	// input  iInt_sig
	.iInt_T(iInt_T_sig) ,	// input [7:0] iInt_T_sig
	.iRamData(iRamData_sig) ,	// input [31:0] iRamData_sig
	.oRamBW(oRamBW_sig) ,	// output  oRamBW_sig
	.clk100(clk100_sig) ,	// output  clk100_sig
	.oHalted(oHalted_sig) ,	// output  oHalted_sig
	.oAckInt(oAckInt_sig) ,	// output  oAckInt_sig
	.cur_Inst(cur_Inst_sig) ,	// output [63:0] cur_Inst_sig
	.DUMP(DUMP_sig) ,	// output [207:0] DUMP_sig
	.oRamAdr(oRamAdr_sig) ,	// output [19:0] oRamAdr_sig
	.oRamBurst(oRamBurst_sig) ,	// output [1:0] oRamBurst_sig
	.oRamData(oRamData_sig) ,	// output [15:0] oRamData_sig
	.oRamRW(oRamRW_sig) ,	// output [1:0] oRamRW_sig
	.oTmpOut(oTmpOut_sig) 	// output [15:0] oTmpOut_sig
);

